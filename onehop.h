/* A RapidNet application. Generated by RapidNet compiler. */

#ifndef ONEHOP_H
#define ONEHOP_H

#include <string>
#include <iostream>
#include "ns3/ptr.h"
#include "ns3/event-id.h"
#include "ns3/ipv4-address.h"
#include "ns3/rapidnet-header.h"
#include "ns3/relation-base.h"
#include "ns3/database.h"
#include "ns3/rapidnet-application-base.h"
#include "ns3/aggregator.h"
#include "ns3/aggwrap.h"

using namespace std;
using namespace ns3;

namespace ns3 {

class Socket;
class Packet;

namespace rapidnet {
namespace onehop {

class Onehop : public RapidNetApplicationBase
{
public:
  static const string LINK;
  static const string ONEHOP;

  static TypeId GetTypeId (void);

  Onehop ();

  virtual ~Onehop ();

protected:

  virtual void DoDispose (void);

  virtual void StartApplication (void);

  virtual void StopApplication (void);

  virtual void InitDatabase (void);

  virtual void DemuxRecv (Ptr<Tuple> tuple);

  virtual void R1Eca0Ins (Ptr<Tuple> link);

};

} // namespace onehop
} // namespace rapidnet
} // namespace ns3

#endif // ONEHOP_H
