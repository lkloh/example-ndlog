/* A RapidNet application. Generated by RapidNet compiler. */

#include "fourhops.h"
#include <cstdlib>
#include "ns3/nstime.h"
#include "ns3/simulator.h"
#include "ns3/type-ids.h"
#include "ns3/rapidnet-types.h"
#include "ns3/rapidnet-utils.h"
#include "ns3/assignor.h"
#include "ns3/selector.h"
#include "ns3/rapidnet-functions.h"

using namespace std;
using namespace ns3;
using namespace ns3::rapidnet;
using namespace ns3::rapidnet::fourhops;

const string Fourhops::FOURHOPS = "fourhops";
const string Fourhops::FOURHOPSDELETE = "fourhopsDelete";
const string Fourhops::LINK = "link";
const string Fourhops::ONEHOP = "onehop";
const string Fourhops::R2LOCAL1R2ONEHOPMIDSEND = "r2Local1r2onehopMidsend";
const string Fourhops::R2LOCAL2TWOHOPSSEND = "r2Local2twohopssend";
const string Fourhops::R2ONEHOPMID = "r2onehopMid";
const string Fourhops::R2ONEHOPMIDDELETE = "r2onehopMidDelete";
const string Fourhops::R3LOCAL1R3LINKMIDSEND = "r3Local1r3linkMidsend";
const string Fourhops::R3LOCAL2TWOHOPSSEND = "r3Local2twohopssend";
const string Fourhops::R3LINKMID = "r3linkMid";
const string Fourhops::R3LINKMIDDELETE = "r3linkMidDelete";
const string Fourhops::R5LOCAL1R5ONEHOPMIDSEND = "r5Local1r5onehopMidsend";
const string Fourhops::R5LOCAL2THREEHOPSSEND = "r5Local2threehopssend";
const string Fourhops::R5ONEHOPMID = "r5onehopMid";
const string Fourhops::R5ONEHOPMIDDELETE = "r5onehopMidDelete";
const string Fourhops::R6LOCAL1R6TWOHOPS1MIDSEND = "r6Local1r6twohops1Midsend";
const string Fourhops::R6LOCAL2FOURHOPSSEND = "r6Local2fourhopssend";
const string Fourhops::R6TWOHOPS1MID = "r6twohops1Mid";
const string Fourhops::R6TWOHOPS1MIDDELETE = "r6twohops1MidDelete";
const string Fourhops::R7LOCAL1R7ONEHOPMIDSEND = "r7Local1r7onehopMidsend";
const string Fourhops::R7LOCAL2FOURHOPSSEND = "r7Local2fourhopssend";
const string Fourhops::R7ONEHOPMID = "r7onehopMid";
const string Fourhops::R7ONEHOPMIDDELETE = "r7onehopMidDelete";
const string Fourhops::THREEHOPS = "threehops";
const string Fourhops::THREEHOPSDELETE = "threehopsDelete";
const string Fourhops::TWOHOPS = "twohops";
const string Fourhops::TWOHOPS1 = "twohops1";
const string Fourhops::TWOHOPSDELETE = "twohopsDelete";

NS_LOG_COMPONENT_DEFINE ("Fourhops");
NS_OBJECT_ENSURE_REGISTERED (Fourhops);

TypeId
Fourhops::GetTypeId (void)
{
  static TypeId tid = TypeId ("ns3::rapidnet::fourhops::Fourhops")
    .SetParent<RapidNetApplicationBase> ()
    .AddConstructor<Fourhops> ()
    ;
  return tid;
}

Fourhops::Fourhops()
{
  NS_LOG_FUNCTION_NOARGS ();
}

Fourhops::~Fourhops()
{
  NS_LOG_FUNCTION_NOARGS ();
}

void
Fourhops::DoDispose (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::DoDispose ();
}

void
Fourhops::StartApplication (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StartApplication ();
  RAPIDNET_LOG_INFO("Fourhops Application Started");
}

void
Fourhops::StopApplication ()
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StopApplication ();
  RAPIDNET_LOG_INFO("Fourhops Application Stopped");
}

void
Fourhops::InitDatabase ()
{
  //RapidNetApplicationBase::InitDatabase ();

  AddRelationWithKeys (FOURHOPS, attrdeflist (
    attrdef ("fourhops_attr1", IPV4),
    attrdef ("fourhops_attr2", IPV4)));

  AddRelationWithKeys (LINK, attrdeflist (
    attrdef ("link_attr1", IPV4),
    attrdef ("link_attr2", IPV4)));

  AddRelationWithKeys (ONEHOP, attrdeflist (
    attrdef ("onehop_attr1", IPV4),
    attrdef ("onehop_attr2", IPV4)));

  AddRelationWithKeys (R2ONEHOPMID, attrdeflist (
    attrdef ("r2onehopMid_attr1", IPV4),
    attrdef ("r2onehopMid_attr2", IPV4)));

  AddRelationWithKeys (R3LINKMID, attrdeflist (
    attrdef ("r3linkMid_attr1", IPV4),
    attrdef ("r3linkMid_attr2", IPV4)));

  AddRelationWithKeys (R5ONEHOPMID, attrdeflist (
    attrdef ("r5onehopMid_attr1", IPV4),
    attrdef ("r5onehopMid_attr2", IPV4)));

  AddRelationWithKeys (R6TWOHOPS1MID, attrdeflist (
    attrdef ("r6twohops1Mid_attr1", IPV4),
    attrdef ("r6twohops1Mid_attr2", IPV4)));

  AddRelationWithKeys (R7ONEHOPMID, attrdeflist (
    attrdef ("r7onehopMid_attr1", IPV4),
    attrdef ("r7onehopMid_attr2", IPV4)));

  AddRelationWithKeys (THREEHOPS, attrdeflist (
    attrdef ("threehops_attr1", IPV4),
    attrdef ("threehops_attr2", IPV4)));

  AddRelationWithKeys (TWOHOPS, attrdeflist (
    attrdef ("twohops_attr1", IPV4),
    attrdef ("twohops_attr2", IPV4)));

  AddRelationWithKeys (TWOHOPS1, attrdeflist (
    attrdef ("twohops1_attr1", IPV4),
    attrdef ("twohops1_attr2", IPV4)));

}

void
Fourhops::DemuxRecv (Ptr<Tuple> tuple)
{
  RapidNetApplicationBase::DemuxRecv (tuple);

  if (IsInsertEvent (tuple, LINK))
    {
      R1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINK))
    {
      R1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R2LOCAL1R2ONEHOPMIDSEND))
    {
      R2Local1Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, R2ONEHOPMIDDELETE))
    {
      R2Local1Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, ONEHOP))
    {
      R2Local1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, ONEHOP))
    {
      R2Local1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R2LOCAL2TWOHOPSSEND))
    {
      R2Local2Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, TWOHOPSDELETE))
    {
      R2Local2Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, R2ONEHOPMID))
    {
      R2Local2Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, R2ONEHOPMID))
    {
      R2Local2Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, LINK))
    {
      R2Local2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINK))
    {
      R2Local2Eca1Del (tuple);
    }
  if (IsRecvEvent (tuple, R3LOCAL1R3LINKMIDSEND))
    {
      R3Local1Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, R3LINKMIDDELETE))
    {
      R3Local1Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, LINK))
    {
      R3Local1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINK))
    {
      R3Local1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R3LOCAL2TWOHOPSSEND))
    {
      R3Local2Eca0RemoteIns (tuple);
    }
  if (IsInsertEvent (tuple, R3LINKMID))
    {
      R3Local2Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, R3LINKMID))
    {
      R3Local2Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, ONEHOP))
    {
      R3Local2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, ONEHOP))
    {
      R3Local2Eca1Del (tuple);
    }
  if (IsInsertEvent (tuple, TWOHOPS))
    {
      R4Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TWOHOPS))
    {
      R4Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R5LOCAL1R5ONEHOPMIDSEND))
    {
      R5Local1Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, R5ONEHOPMIDDELETE))
    {
      R5Local1Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, ONEHOP))
    {
      R5Local1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, ONEHOP))
    {
      R5Local1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R5LOCAL2THREEHOPSSEND))
    {
      R5Local2Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, THREEHOPSDELETE))
    {
      R5Local2Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, R5ONEHOPMID))
    {
      R5Local2Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, R5ONEHOPMID))
    {
      R5Local2Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, TWOHOPS))
    {
      R5Local2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TWOHOPS))
    {
      R5Local2Eca1Del (tuple);
    }
  if (IsRecvEvent (tuple, R6LOCAL1R6TWOHOPS1MIDSEND))
    {
      R6Local1Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, R6TWOHOPS1MIDDELETE))
    {
      R6Local1Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, TWOHOPS1))
    {
      R6Local1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TWOHOPS1))
    {
      R6Local1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R6LOCAL2FOURHOPSSEND))
    {
      R6Local2Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, FOURHOPSDELETE))
    {
      R6Local2Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, R6TWOHOPS1MID))
    {
      R6Local2Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, R6TWOHOPS1MID))
    {
      R6Local2Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, TWOHOPS))
    {
      R6Local2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TWOHOPS))
    {
      R6Local2Eca1Del (tuple);
    }
  if (IsRecvEvent (tuple, R7LOCAL1R7ONEHOPMIDSEND))
    {
      R7Local1Eca0RemoteIns (tuple);
    }
  if (IsRecvEvent (tuple, R7ONEHOPMIDDELETE))
    {
      R7Local1Eca0RemoteDel (tuple);
    }
  if (IsInsertEvent (tuple, ONEHOP))
    {
      R7Local1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, ONEHOP))
    {
      R7Local1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, R7LOCAL2FOURHOPSSEND))
    {
      R7Local2Eca0RemoteIns (tuple);
    }
  if (IsInsertEvent (tuple, R7ONEHOPMID))
    {
      R7Local2Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, R7ONEHOPMID))
    {
      R7Local2Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, THREEHOPS))
    {
      R7Local2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, THREEHOPS))
    {
      R7Local2Eca1Del (tuple);
    }
}

void
Fourhops::R1Eca0Ins (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R1Eca0Ins triggered");

  Ptr<Tuple> result = link;

  result = result->Project (
    ONEHOP,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3"),
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3"));

  Insert (result);
}

void
Fourhops::R1Eca0Del (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R1Eca0Del triggered");

  Ptr<Tuple> result = link;

  result = result->Project (
    ONEHOP,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3"),
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3"));

  Delete (result);
}

void
Fourhops::R2Local1Eca0RemoteIns (Ptr<Tuple> r2Local1r2onehopMidsend)
{
  RAPIDNET_LOG_INFO ("R2Local1Eca0RemoteIns triggered");

  Ptr<Tuple> result = r2Local1r2onehopMidsend;

  result = result->Project (
    R2ONEHOPMID,
    strlist ("r2Local1r2onehopMidsend_attr1",
      "r2Local1r2onehopMidsend_attr2",
      "r2Local1r2onehopMidsend_attr3"),
    strlist ("r2onehopMid_attr1",
      "r2onehopMid_attr2",
      "r2onehopMid_attr3"));

  Insert (result);
}

void
Fourhops::R2Local1Eca0RemoteDel (Ptr<Tuple> r2onehopMidDelete)
{
  RAPIDNET_LOG_INFO ("R2Local1Eca0RemoteDel triggered");

  Ptr<Tuple> result = r2onehopMidDelete;

  result = result->Project (
    R2ONEHOPMID,
    strlist ("r2onehopMidDelete_attr1",
      "r2onehopMidDelete_attr2",
      "r2onehopMidDelete_attr3"),
    strlist ("r2onehopMid_attr1",
      "r2onehopMid_attr2",
      "r2onehopMid_attr3"));

  Delete (result);
}

void
Fourhops::R2Local1Eca0Ins (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R2Local1Eca0Ins triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R2LOCAL1R2ONEHOPMIDSEND,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r2Local1r2onehopMidsend_attr1",
      "r2Local1r2onehopMidsend_attr2",
      "r2Local1r2onehopMidsend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R2Local1Eca0Del (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R2Local1Eca0Del triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R2ONEHOPMIDDELETE,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r2onehopMidDelete_attr1",
      "r2onehopMidDelete_attr2",
      "r2onehopMidDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R2Local2Eca0RemoteIns (Ptr<Tuple> r2Local2twohopssend)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca0RemoteIns triggered");

  Ptr<Tuple> result = r2Local2twohopssend;

  result = result->Project (
    TWOHOPS,
    strlist ("r2Local2twohopssend_attr1",
      "r2Local2twohopssend_attr2",
      "r2Local2twohopssend_attr3"),
    strlist ("twohops_attr1",
      "twohops_attr2",
      "twohops_attr3"));

  Insert (result);
}

void
Fourhops::R2Local2Eca0RemoteDel (Ptr<Tuple> twohopsDelete)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca0RemoteDel triggered");

  Ptr<Tuple> result = twohopsDelete;

  result = result->Project (
    TWOHOPS,
    strlist ("twohopsDelete_attr1",
      "twohopsDelete_attr2",
      "twohopsDelete_attr3"),
    strlist ("twohops_attr1",
      "twohops_attr2",
      "twohops_attr3"));

  Delete (result);
}

void
Fourhops::R2Local2Eca0Ins (Ptr<Tuple> r2onehopMid)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (LINK)->Join (
    r2onehopMid,
    strlist ("link_attr1"),
    strlist ("r2onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r2onehopMid_attr3"),
      VarExpr::New ("link_attr3"))));

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("Cost"),
      ValueExpr::New (Int32Value::New (3)))));

  result = result->Project (
    R2LOCAL2TWOHOPSSEND,
    strlist ("r2onehopMid_attr1",
      "link_attr2",
      "Cost",
      "r2onehopMid_attr1"),
    strlist ("r2Local2twohopssend_attr1",
      "r2Local2twohopssend_attr2",
      "r2Local2twohopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R2Local2Eca0Del (Ptr<Tuple> r2onehopMid)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (LINK)->Join (
    r2onehopMid,
    strlist ("link_attr1"),
    strlist ("r2onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r2onehopMid_attr3"),
      VarExpr::New ("link_attr3"))));

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("Cost"),
      ValueExpr::New (Int32Value::New (3)))));

  result = result->Project (
    TWOHOPSDELETE,
    strlist ("r2onehopMid_attr1",
      "link_attr2",
      "Cost",
      "r2onehopMid_attr1"),
    strlist ("twohopsDelete_attr1",
      "twohopsDelete_attr2",
      "twohopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R2Local2Eca1Ins (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R2ONEHOPMID)->Join (
    link,
    strlist ("r2onehopMid_attr2"),
    strlist ("link_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r2onehopMid_attr3"),
      VarExpr::New ("link_attr3"))));

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("Cost"),
      ValueExpr::New (Int32Value::New (3)))));

  result = result->Project (
    R2LOCAL2TWOHOPSSEND,
    strlist ("r2onehopMid_attr1",
      "link_attr2",
      "Cost",
      "r2onehopMid_attr1"),
    strlist ("r2Local2twohopssend_attr1",
      "r2Local2twohopssend_attr2",
      "r2Local2twohopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R2Local2Eca1Del (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R2Local2Eca1Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R2ONEHOPMID)->Join (
    link,
    strlist ("r2onehopMid_attr2"),
    strlist ("link_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r2onehopMid_attr3"),
      VarExpr::New ("link_attr3"))));

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("Cost"),
      ValueExpr::New (Int32Value::New (3)))));

  result = result->Project (
    TWOHOPSDELETE,
    strlist ("r2onehopMid_attr1",
      "link_attr2",
      "Cost",
      "r2onehopMid_attr1"),
    strlist ("twohopsDelete_attr1",
      "twohopsDelete_attr2",
      "twohopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local1Eca0RemoteIns (Ptr<Tuple> r3Local1r3linkMidsend)
{
  RAPIDNET_LOG_INFO ("R3Local1Eca0RemoteIns triggered");

  Ptr<Tuple> result = r3Local1r3linkMidsend;

  result = result->Project (
    R3LINKMID,
    strlist ("r3Local1r3linkMidsend_attr1",
      "r3Local1r3linkMidsend_attr2",
      "r3Local1r3linkMidsend_attr3"),
    strlist ("r3linkMid_attr1",
      "r3linkMid_attr2",
      "r3linkMid_attr3"));

  Insert (result);
}

void
Fourhops::R3Local1Eca0RemoteDel (Ptr<Tuple> r3linkMidDelete)
{
  RAPIDNET_LOG_INFO ("R3Local1Eca0RemoteDel triggered");

  Ptr<Tuple> result = r3linkMidDelete;

  result = result->Project (
    R3LINKMID,
    strlist ("r3linkMidDelete_attr1",
      "r3linkMidDelete_attr2",
      "r3linkMidDelete_attr3"),
    strlist ("r3linkMid_attr1",
      "r3linkMid_attr2",
      "r3linkMid_attr3"));

  Delete (result);
}

void
Fourhops::R3Local1Eca0Ins (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R3Local1Eca0Ins triggered");

  Ptr<Tuple> result = link;

  result = result->Project (
    R3LOCAL1R3LINKMIDSEND,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3",
      "link_attr2"),
    strlist ("r3Local1r3linkMidsend_attr1",
      "r3Local1r3linkMidsend_attr2",
      "r3Local1r3linkMidsend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local1Eca0Del (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R3Local1Eca0Del triggered");

  Ptr<Tuple> result = link;

  result = result->Project (
    R3LINKMIDDELETE,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3",
      "link_attr2"),
    strlist ("r3linkMidDelete_attr1",
      "r3linkMidDelete_attr2",
      "r3linkMidDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local2Eca0RemoteIns (Ptr<Tuple> r3Local2twohopssend)
{
  RAPIDNET_LOG_INFO ("R3Local2Eca0RemoteIns triggered");

  Ptr<Tuple> result = r3Local2twohopssend;

  result = result->Project (
    TWOHOPS,
    strlist ("r3Local2twohopssend_attr1",
      "r3Local2twohopssend_attr2",
      "r3Local2twohopssend_attr3"),
    strlist ("twohops_attr1",
      "twohops_attr2",
      "twohops_attr3"));

  Insert (result);
}

void
Fourhops::R3Local2Eca0Ins (Ptr<Tuple> r3linkMid)
{
  RAPIDNET_LOG_INFO ("R3Local2Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (ONEHOP)->Join (
    r3linkMid,
    strlist ("onehop_attr1"),
    strlist ("r3linkMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r3linkMid_attr3"),
      VarExpr::New ("onehop_attr3"))));

  result = result->Project (
    R3LOCAL2TWOHOPSSEND,
    strlist ("r3linkMid_attr1",
      "onehop_attr2",
      "Cost",
      "r3linkMid_attr1"),
    strlist ("r3Local2twohopssend_attr1",
      "r3Local2twohopssend_attr2",
      "r3Local2twohopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local2Eca0Del (Ptr<Tuple> r3linkMid)
{
  RAPIDNET_LOG_INFO ("R3Local2Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (ONEHOP)->Join (
    r3linkMid,
    strlist ("onehop_attr1"),
    strlist ("r3linkMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r3linkMid_attr3"),
      VarExpr::New ("onehop_attr3"))));

  result = result->Project (
    TWOHOPSDELETE,
    strlist ("r3linkMid_attr1",
      "onehop_attr2",
      "Cost",
      "r3linkMid_attr1"),
    strlist ("twohopsDelete_attr1",
      "twohopsDelete_attr2",
      "twohopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local2Eca1Ins (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R3Local2Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R3LINKMID)->Join (
    onehop,
    strlist ("r3linkMid_attr2"),
    strlist ("onehop_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r3linkMid_attr3"),
      VarExpr::New ("onehop_attr3"))));

  result = result->Project (
    R3LOCAL2TWOHOPSSEND,
    strlist ("r3linkMid_attr1",
      "onehop_attr2",
      "Cost",
      "r3linkMid_attr1"),
    strlist ("r3Local2twohopssend_attr1",
      "r3Local2twohopssend_attr2",
      "r3Local2twohopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R3Local2Eca1Del (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R3Local2Eca1Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R3LINKMID)->Join (
    onehop,
    strlist ("r3linkMid_attr2"),
    strlist ("onehop_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r3linkMid_attr3"),
      VarExpr::New ("onehop_attr3"))));

  result = result->Project (
    TWOHOPSDELETE,
    strlist ("r3linkMid_attr1",
      "onehop_attr2",
      "Cost",
      "r3linkMid_attr1"),
    strlist ("twohopsDelete_attr1",
      "twohopsDelete_attr2",
      "twohopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R4Eca0Ins (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R4Eca0Ins triggered");

  Ptr<Tuple> result = twohops;

  result = result->Project (
    TWOHOPS1,
    strlist ("twohops_attr1",
      "twohops_attr2",
      "twohops_attr3"),
    strlist ("twohops1_attr1",
      "twohops1_attr2",
      "twohops1_attr3"));

  Insert (result);
}

void
Fourhops::R4Eca0Del (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R4Eca0Del triggered");

  Ptr<Tuple> result = twohops;

  result = result->Project (
    TWOHOPS1,
    strlist ("twohops_attr1",
      "twohops_attr2",
      "twohops_attr3"),
    strlist ("twohops1_attr1",
      "twohops1_attr2",
      "twohops1_attr3"));

  Delete (result);
}

void
Fourhops::R5Local1Eca0RemoteIns (Ptr<Tuple> r5Local1r5onehopMidsend)
{
  RAPIDNET_LOG_INFO ("R5Local1Eca0RemoteIns triggered");

  Ptr<Tuple> result = r5Local1r5onehopMidsend;

  result = result->Project (
    R5ONEHOPMID,
    strlist ("r5Local1r5onehopMidsend_attr1",
      "r5Local1r5onehopMidsend_attr2",
      "r5Local1r5onehopMidsend_attr3"),
    strlist ("r5onehopMid_attr1",
      "r5onehopMid_attr2",
      "r5onehopMid_attr3"));

  Insert (result);
}

void
Fourhops::R5Local1Eca0RemoteDel (Ptr<Tuple> r5onehopMidDelete)
{
  RAPIDNET_LOG_INFO ("R5Local1Eca0RemoteDel triggered");

  Ptr<Tuple> result = r5onehopMidDelete;

  result = result->Project (
    R5ONEHOPMID,
    strlist ("r5onehopMidDelete_attr1",
      "r5onehopMidDelete_attr2",
      "r5onehopMidDelete_attr3"),
    strlist ("r5onehopMid_attr1",
      "r5onehopMid_attr2",
      "r5onehopMid_attr3"));

  Delete (result);
}

void
Fourhops::R5Local1Eca0Ins (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R5Local1Eca0Ins triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R5LOCAL1R5ONEHOPMIDSEND,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r5Local1r5onehopMidsend_attr1",
      "r5Local1r5onehopMidsend_attr2",
      "r5Local1r5onehopMidsend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R5Local1Eca0Del (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R5Local1Eca0Del triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R5ONEHOPMIDDELETE,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r5onehopMidDelete_attr1",
      "r5onehopMidDelete_attr2",
      "r5onehopMidDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R5Local2Eca0RemoteIns (Ptr<Tuple> r5Local2threehopssend)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca0RemoteIns triggered");

  Ptr<Tuple> result = r5Local2threehopssend;

  result = result->Project (
    THREEHOPS,
    strlist ("r5Local2threehopssend_attr1",
      "r5Local2threehopssend_attr2",
      "r5Local2threehopssend_attr3"),
    strlist ("threehops_attr1",
      "threehops_attr2",
      "threehops_attr3"));

  Insert (result);
}

void
Fourhops::R5Local2Eca0RemoteDel (Ptr<Tuple> threehopsDelete)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca0RemoteDel triggered");

  Ptr<Tuple> result = threehopsDelete;

  result = result->Project (
    THREEHOPS,
    strlist ("threehopsDelete_attr1",
      "threehopsDelete_attr2",
      "threehopsDelete_attr3"),
    strlist ("threehops_attr1",
      "threehops_attr2",
      "threehops_attr3"));

  Delete (result);
}

void
Fourhops::R5Local2Eca0Ins (Ptr<Tuple> r5onehopMid)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TWOHOPS)->Join (
    r5onehopMid,
    strlist ("twohops_attr1"),
    strlist ("r5onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r5onehopMid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    R5LOCAL2THREEHOPSSEND,
    strlist ("r5onehopMid_attr1",
      "twohops_attr2",
      "Cost",
      "r5onehopMid_attr1"),
    strlist ("r5Local2threehopssend_attr1",
      "r5Local2threehopssend_attr2",
      "r5Local2threehopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R5Local2Eca0Del (Ptr<Tuple> r5onehopMid)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TWOHOPS)->Join (
    r5onehopMid,
    strlist ("twohops_attr1"),
    strlist ("r5onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r5onehopMid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    THREEHOPSDELETE,
    strlist ("r5onehopMid_attr1",
      "twohops_attr2",
      "Cost",
      "r5onehopMid_attr1"),
    strlist ("threehopsDelete_attr1",
      "threehopsDelete_attr2",
      "threehopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R5Local2Eca1Ins (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R5ONEHOPMID)->Join (
    twohops,
    strlist ("r5onehopMid_attr2"),
    strlist ("twohops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r5onehopMid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    R5LOCAL2THREEHOPSSEND,
    strlist ("r5onehopMid_attr1",
      "twohops_attr2",
      "Cost",
      "r5onehopMid_attr1"),
    strlist ("r5Local2threehopssend_attr1",
      "r5Local2threehopssend_attr2",
      "r5Local2threehopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R5Local2Eca1Del (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R5Local2Eca1Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R5ONEHOPMID)->Join (
    twohops,
    strlist ("r5onehopMid_attr2"),
    strlist ("twohops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r5onehopMid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    THREEHOPSDELETE,
    strlist ("r5onehopMid_attr1",
      "twohops_attr2",
      "Cost",
      "r5onehopMid_attr1"),
    strlist ("threehopsDelete_attr1",
      "threehopsDelete_attr2",
      "threehopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local1Eca0RemoteIns (Ptr<Tuple> r6Local1r6twohops1Midsend)
{
  RAPIDNET_LOG_INFO ("R6Local1Eca0RemoteIns triggered");

  Ptr<Tuple> result = r6Local1r6twohops1Midsend;

  result = result->Project (
    R6TWOHOPS1MID,
    strlist ("r6Local1r6twohops1Midsend_attr1",
      "r6Local1r6twohops1Midsend_attr2",
      "r6Local1r6twohops1Midsend_attr3"),
    strlist ("r6twohops1Mid_attr1",
      "r6twohops1Mid_attr2",
      "r6twohops1Mid_attr3"));

  Insert (result);
}

void
Fourhops::R6Local1Eca0RemoteDel (Ptr<Tuple> r6twohops1MidDelete)
{
  RAPIDNET_LOG_INFO ("R6Local1Eca0RemoteDel triggered");

  Ptr<Tuple> result = r6twohops1MidDelete;

  result = result->Project (
    R6TWOHOPS1MID,
    strlist ("r6twohops1MidDelete_attr1",
      "r6twohops1MidDelete_attr2",
      "r6twohops1MidDelete_attr3"),
    strlist ("r6twohops1Mid_attr1",
      "r6twohops1Mid_attr2",
      "r6twohops1Mid_attr3"));

  Delete (result);
}

void
Fourhops::R6Local1Eca0Ins (Ptr<Tuple> twohops1)
{
  RAPIDNET_LOG_INFO ("R6Local1Eca0Ins triggered");

  Ptr<Tuple> result = twohops1;

  result = result->Project (
    R6LOCAL1R6TWOHOPS1MIDSEND,
    strlist ("twohops1_attr1",
      "twohops1_attr2",
      "twohops1_attr3",
      "twohops1_attr2"),
    strlist ("r6Local1r6twohops1Midsend_attr1",
      "r6Local1r6twohops1Midsend_attr2",
      "r6Local1r6twohops1Midsend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local1Eca0Del (Ptr<Tuple> twohops1)
{
  RAPIDNET_LOG_INFO ("R6Local1Eca0Del triggered");

  Ptr<Tuple> result = twohops1;

  result = result->Project (
    R6TWOHOPS1MIDDELETE,
    strlist ("twohops1_attr1",
      "twohops1_attr2",
      "twohops1_attr3",
      "twohops1_attr2"),
    strlist ("r6twohops1MidDelete_attr1",
      "r6twohops1MidDelete_attr2",
      "r6twohops1MidDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local2Eca0RemoteIns (Ptr<Tuple> r6Local2fourhopssend)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca0RemoteIns triggered");

  Ptr<Tuple> result = r6Local2fourhopssend;

  result = result->Project (
    FOURHOPS,
    strlist ("r6Local2fourhopssend_attr1",
      "r6Local2fourhopssend_attr2",
      "r6Local2fourhopssend_attr3"),
    strlist ("fourhops_attr1",
      "fourhops_attr2",
      "fourhops_attr3"));

  Insert (result);
}

void
Fourhops::R6Local2Eca0RemoteDel (Ptr<Tuple> fourhopsDelete)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca0RemoteDel triggered");

  Ptr<Tuple> result = fourhopsDelete;

  result = result->Project (
    FOURHOPS,
    strlist ("fourhopsDelete_attr1",
      "fourhopsDelete_attr2",
      "fourhopsDelete_attr3"),
    strlist ("fourhops_attr1",
      "fourhops_attr2",
      "fourhops_attr3"));

  Delete (result);
}

void
Fourhops::R6Local2Eca0Ins (Ptr<Tuple> r6twohops1Mid)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TWOHOPS)->Join (
    r6twohops1Mid,
    strlist ("twohops_attr1"),
    strlist ("r6twohops1Mid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r6twohops1Mid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    R6LOCAL2FOURHOPSSEND,
    strlist ("r6twohops1Mid_attr1",
      "twohops_attr2",
      "Cost",
      "r6twohops1Mid_attr1"),
    strlist ("r6Local2fourhopssend_attr1",
      "r6Local2fourhopssend_attr2",
      "r6Local2fourhopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local2Eca0Del (Ptr<Tuple> r6twohops1Mid)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TWOHOPS)->Join (
    r6twohops1Mid,
    strlist ("twohops_attr1"),
    strlist ("r6twohops1Mid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r6twohops1Mid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    FOURHOPSDELETE,
    strlist ("r6twohops1Mid_attr1",
      "twohops_attr2",
      "Cost",
      "r6twohops1Mid_attr1"),
    strlist ("fourhopsDelete_attr1",
      "fourhopsDelete_attr2",
      "fourhopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local2Eca1Ins (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R6TWOHOPS1MID)->Join (
    twohops,
    strlist ("r6twohops1Mid_attr2"),
    strlist ("twohops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r6twohops1Mid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    R6LOCAL2FOURHOPSSEND,
    strlist ("r6twohops1Mid_attr1",
      "twohops_attr2",
      "Cost",
      "r6twohops1Mid_attr1"),
    strlist ("r6Local2fourhopssend_attr1",
      "r6Local2fourhopssend_attr2",
      "r6Local2fourhopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R6Local2Eca1Del (Ptr<Tuple> twohops)
{
  RAPIDNET_LOG_INFO ("R6Local2Eca1Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R6TWOHOPS1MID)->Join (
    twohops,
    strlist ("r6twohops1Mid_attr2"),
    strlist ("twohops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r6twohops1Mid_attr3"),
      VarExpr::New ("twohops_attr3"))));

  result = result->Project (
    FOURHOPSDELETE,
    strlist ("r6twohops1Mid_attr1",
      "twohops_attr2",
      "Cost",
      "r6twohops1Mid_attr1"),
    strlist ("fourhopsDelete_attr1",
      "fourhopsDelete_attr2",
      "fourhopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local1Eca0RemoteIns (Ptr<Tuple> r7Local1r7onehopMidsend)
{
  RAPIDNET_LOG_INFO ("R7Local1Eca0RemoteIns triggered");

  Ptr<Tuple> result = r7Local1r7onehopMidsend;

  result = result->Project (
    R7ONEHOPMID,
    strlist ("r7Local1r7onehopMidsend_attr1",
      "r7Local1r7onehopMidsend_attr2",
      "r7Local1r7onehopMidsend_attr3"),
    strlist ("r7onehopMid_attr1",
      "r7onehopMid_attr2",
      "r7onehopMid_attr3"));

  Insert (result);
}

void
Fourhops::R7Local1Eca0RemoteDel (Ptr<Tuple> r7onehopMidDelete)
{
  RAPIDNET_LOG_INFO ("R7Local1Eca0RemoteDel triggered");

  Ptr<Tuple> result = r7onehopMidDelete;

  result = result->Project (
    R7ONEHOPMID,
    strlist ("r7onehopMidDelete_attr1",
      "r7onehopMidDelete_attr2",
      "r7onehopMidDelete_attr3"),
    strlist ("r7onehopMid_attr1",
      "r7onehopMid_attr2",
      "r7onehopMid_attr3"));

  Delete (result);
}

void
Fourhops::R7Local1Eca0Ins (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R7Local1Eca0Ins triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R7LOCAL1R7ONEHOPMIDSEND,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r7Local1r7onehopMidsend_attr1",
      "r7Local1r7onehopMidsend_attr2",
      "r7Local1r7onehopMidsend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local1Eca0Del (Ptr<Tuple> onehop)
{
  RAPIDNET_LOG_INFO ("R7Local1Eca0Del triggered");

  Ptr<Tuple> result = onehop;

  result = result->Project (
    R7ONEHOPMIDDELETE,
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3",
      "onehop_attr2"),
    strlist ("r7onehopMidDelete_attr1",
      "r7onehopMidDelete_attr2",
      "r7onehopMidDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local2Eca0RemoteIns (Ptr<Tuple> r7Local2fourhopssend)
{
  RAPIDNET_LOG_INFO ("R7Local2Eca0RemoteIns triggered");

  Ptr<Tuple> result = r7Local2fourhopssend;

  result = result->Project (
    FOURHOPS,
    strlist ("r7Local2fourhopssend_attr1",
      "r7Local2fourhopssend_attr2",
      "r7Local2fourhopssend_attr3"),
    strlist ("fourhops_attr1",
      "fourhops_attr2",
      "fourhops_attr3"));

  Insert (result);
}

void
Fourhops::R7Local2Eca0Ins (Ptr<Tuple> r7onehopMid)
{
  RAPIDNET_LOG_INFO ("R7Local2Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (THREEHOPS)->Join (
    r7onehopMid,
    strlist ("threehops_attr1"),
    strlist ("r7onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r7onehopMid_attr3"),
      VarExpr::New ("threehops_attr3"))));

  result = result->Project (
    R7LOCAL2FOURHOPSSEND,
    strlist ("r7onehopMid_attr1",
      "threehops_attr2",
      "Cost",
      "r7onehopMid_attr1"),
    strlist ("r7Local2fourhopssend_attr1",
      "r7Local2fourhopssend_attr2",
      "r7Local2fourhopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local2Eca0Del (Ptr<Tuple> r7onehopMid)
{
  RAPIDNET_LOG_INFO ("R7Local2Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (THREEHOPS)->Join (
    r7onehopMid,
    strlist ("threehops_attr1"),
    strlist ("r7onehopMid_attr2"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r7onehopMid_attr3"),
      VarExpr::New ("threehops_attr3"))));

  result = result->Project (
    FOURHOPSDELETE,
    strlist ("r7onehopMid_attr1",
      "threehops_attr2",
      "Cost",
      "r7onehopMid_attr1"),
    strlist ("fourhopsDelete_attr1",
      "fourhopsDelete_attr2",
      "fourhopsDelete_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local2Eca1Ins (Ptr<Tuple> threehops)
{
  RAPIDNET_LOG_INFO ("R7Local2Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R7ONEHOPMID)->Join (
    threehops,
    strlist ("r7onehopMid_attr2"),
    strlist ("threehops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r7onehopMid_attr3"),
      VarExpr::New ("threehops_attr3"))));

  result = result->Project (
    R7LOCAL2FOURHOPSSEND,
    strlist ("r7onehopMid_attr1",
      "threehops_attr2",
      "Cost",
      "r7onehopMid_attr1"),
    strlist ("r7Local2fourhopssend_attr1",
      "r7Local2fourhopssend_attr2",
      "r7Local2fourhopssend_attr3",
      RN_DEST));

  Send (result);
}

void
Fourhops::R7Local2Eca1Del (Ptr<Tuple> threehops)
{
  RAPIDNET_LOG_INFO ("R7Local2Eca1Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (R7ONEHOPMID)->Join (
    threehops,
    strlist ("r7onehopMid_attr2"),
    strlist ("threehops_attr1"));

  result->Assign (Assignor::New ("Cost",
    Operation::New (RN_PLUS,
      VarExpr::New ("r7onehopMid_attr3"),
      VarExpr::New ("threehops_attr3"))));

  result = result->Project (
    FOURHOPSDELETE,
    strlist ("r7onehopMid_attr1",
      "threehops_attr2",
      "Cost",
      "r7onehopMid_attr1"),
    strlist ("fourhopsDelete_attr1",
      "fourhopsDelete_attr2",
      "fourhopsDelete_attr3",
      RN_DEST));

  Send (result);
}

