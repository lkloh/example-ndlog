/* A RapidNet application. Generated by RapidNet compiler. */

#include "onehop.h"
#include <cstdlib>
#include "ns3/nstime.h"
#include "ns3/simulator.h"
#include "ns3/type-ids.h"
#include "ns3/rapidnet-types.h"
#include "ns3/rapidnet-utils.h"
#include "ns3/assignor.h"
#include "ns3/selector.h"
#include "ns3/rapidnet-functions.h"

using namespace std;
using namespace ns3;
using namespace ns3::rapidnet;
using namespace ns3::rapidnet::onehop;

const string Onehop::LINK = "link";
const string Onehop::ONEHOP = "onehop";

NS_LOG_COMPONENT_DEFINE ("Onehop");
NS_OBJECT_ENSURE_REGISTERED (Onehop);

TypeId
Onehop::GetTypeId (void)
{
  static TypeId tid = TypeId ("ns3::rapidnet::onehop::Onehop")
    .SetParent<RapidNetApplicationBase> ()
    .AddConstructor<Onehop> ()
    ;
  return tid;
}

Onehop::Onehop()
{
  NS_LOG_FUNCTION_NOARGS ();
}

Onehop::~Onehop()
{
  NS_LOG_FUNCTION_NOARGS ();
}

void
Onehop::DoDispose (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::DoDispose ();
}

void
Onehop::StartApplication (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StartApplication ();
  RAPIDNET_LOG_INFO("Onehop Application Started");
}

void
Onehop::StopApplication ()
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StopApplication ();
  RAPIDNET_LOG_INFO("Onehop Application Stopped");
}

void
Onehop::InitDatabase ()
{
  //RapidNetApplicationBase::InitDatabase ();

  AddRelationWithKeys (LINK, attrdeflist (
    attrdef ("link_attr1", IPV4),
    attrdef ("link_attr2", IPV4)));

  AddRelationWithKeys (ONEHOP, attrdeflist (
    attrdef ("onehop_attr1", IPV4),
    attrdef ("onehop_attr2", IPV4)));

}

void
Onehop::DemuxRecv (Ptr<Tuple> tuple)
{
  RapidNetApplicationBase::DemuxRecv (tuple);

  if (IsInsertEvent (tuple, LINK))
    {
      R1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINK))
    {
      R1Eca0Del (tuple);
    }
}

void
Onehop::R1Eca0Ins (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R1Eca0Ins triggered");

  Ptr<Tuple> result = link;

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("link_attr3"),
      ValueExpr::New (Int32Value::New (0)))));

  result = result->Project (
    ONEHOP,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3"),
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3"));

  Insert (result);
}

void
Onehop::R1Eca0Del (Ptr<Tuple> link)
{
  RAPIDNET_LOG_INFO ("R1Eca0Del triggered");

  Ptr<Tuple> result = link;

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      VarExpr::New ("link_attr3"),
      ValueExpr::New (Int32Value::New (0)))));

  result = result->Project (
    ONEHOP,
    strlist ("link_attr1",
      "link_attr2",
      "link_attr3"),
    strlist ("onehop_attr1",
      "onehop_attr2",
      "onehop_attr3"));

  Delete (result);
}

